user www-data;
worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 768;
    # multi_accept on;
}

http {
    client_max_body_size 2G;
    ##
    # Basic Settings
    ##

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # Logging Settings
    ##

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Redirect legacy companion port (Companion 0.0.X) to our new homepage
    server{
        listen 2770;

        location / {
	    proxy_pass  http://$host:80;
    	    proxy_set_header Host $proxy_host; 
    	    proxy_set_header X-Real-IP $remote_addr;
    	    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    server {
        listen 80;

        add_header Access-Control-Allow-Origin *;

        # Endpoint used for backend status checks.
        # It will always return an empty 204 response when online.
        location /status {
            return 204;
        }

        location /ardupilot-manager {
            rewrite ^/ardupilot-manager$ /ardupilot-manager/ redirect;
            rewrite ^/ardupilot-manager/(.*)$ /$1 break;
            proxy_pass http://127.0.0.1:8000;
        }

        location /beacon {
            rewrite ^/beacon$ /beacon/ redirect;
            rewrite ^/beacon/(.*)$ /$1 break;
            proxy_pass http://127.0.0.1:9111;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Interface-Ip $server_addr;
        }

        location /bridget {
            rewrite ^/bridget$ /bridget/ redirect;
            rewrite ^/bridget/(.*)$ /$1 break;
            proxy_pass http://127.0.0.1:27353;
        }

        location /cable-guy {
            rewrite ^/cable-guy$ /cable-guy/ redirect;
            rewrite ^/cable-guy/(.*)$ /$1 break;
            proxy_pass http://127.0.0.1:9090;
        }

        location /commander {
            rewrite ^/commander$ /commander/ redirect;
            rewrite ^/commander/(.*)$ /$1 break;
            proxy_pass http://127.0.0.1:9100;
        }

        location /docker {
            limit_except GET {
                deny all;
            }
            rewrite ^/docker$ /docker/ redirect;
            rewrite ^/docker/(.*)$ /$1 break;
            proxy_pass http://unix:/var/run/docker.sock:/;
        }

        location /file-browser {
            rewrite ^/file-browser$ /file-browser/ redirect;
            rewrite ^/file-browser/(.*)$ /$1 break;
            proxy_pass http://127.0.0.1:7777;
        }

        location /helper {
            rewrite ^/helper$ /helper/ redirect;
            rewrite ^/helper/(.*)$ /$1 break;
            proxy_pass http://127.0.0.1:81;
        }

        location /kraken {
            rewrite ^/kraken$ /kraken/ redirect;
            rewrite ^/kraken/(.*)$ /$1 break;
            proxy_pass http://127.0.0.1:9134;
        }

        location /nmea-injector {
            rewrite ^/nmea-injector$ /nmea-injector/ redirect;
            rewrite ^/nmea-injector/(.*)$ /$1 break;
            proxy_pass http://127.0.0.1:2748;
        }

        location ^~ /logviewer {
            # ^~ makes this a higher priority than locations with regex
            root /home/pi/tools;
        }

        location /mavlink2rest {
            rewrite ^/mavlink2rest$ /mavlink2rest/ redirect;
            rewrite ^/mavlink2rest/(.*)$ /$1 break;
            proxy_pass http://127.0.0.1:6040;
            # next two lines are required for websockets
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }

        location /mavlink-camera-manager {
            rewrite ^/mavlink-camera-manager$ /mavlink-camera-manager/ redirect;
            rewrite ^/mavlink-camera-manager/(.*)$ /$1 break;
            proxy_pass http://127.0.0.1:6020;
        }

        location /network-test {
            rewrite ^/network-test$ /network-test/ redirect;
            rewrite ^/network-test/(.*)$ /$1 break;
            proxy_pass http://127.0.0.1:9120;
            # next two lines are required for websockets
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }

        location /system-information {
            rewrite ^/system-information$ /system-information/ redirect;
            rewrite ^/system-information/(.*)$ /$1 break;
            proxy_pass http://127.0.0.1:6030;
            # next two lines are required for websockets
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }

        location /terminal {
            rewrite ^/terminal$ /terminal/ redirect;
            rewrite ^/terminal/(.*)$ /$1 break;
            proxy_pass http://127.0.0.1:8088;
            # next two lines are required for websockets
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }

        location /version-chooser {
            rewrite ^/version-chooser$ /version-chooser/ redirect;
            rewrite ^/version-chooser/(.*)$ /$1 break;
            proxy_pass http://127.0.0.1:8081;
            proxy_buffering off;
            expires -1;
            add_header Cache-Control no-store;
        }

        location /wifi-manager {
            rewrite ^/wifi-manager$ /wifi-manager/ redirect;
            rewrite ^/wifi-manager/(.*)$ /$1 break;
            proxy_pass http://127.0.0.1:9000;
        }

        location /ping {
            rewrite ^/ping$ /ping/ redirect;
            rewrite ^/ping/(.*)$ /$1 break;
            proxy_pass http://127.0.0.1:9110;
        }

        location / {
            root /home/pi/frontend;
            try_files $uri $uri/ /index.html;
        }

        location /userdata {
            root /usr/blueos;
            autoindex on;
            # disable cache to improve developer experience
            # this should have very little impact for users
            expires -1;
            add_header Cache-Control no-store;
        }

        location ~* \.html$ {
            root /home/pi/frontend;
            try_files $uri $uri/ /index.html;
            expires -1;
            add_header Cache-Control no-store;
        }

        # Helper to redirect services to their port
        location ~ ^/redirect-port/(?<port>\d+) {
            return 301 $scheme://$host:$port;
        }
    }
}
